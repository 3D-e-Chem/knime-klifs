/*
 * KLIFS API
 * Dynamically interact with the rich content of KLIFS: the structural kinase database
 *
 * The version of the OpenAPI document: 0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StructureDetails
 */
public class StructureDetailsTest {
    private final StructureDetails model = new StructureDetails();

    /**
     * Model tests for StructureDetails
     */
    @Test
    public void testStructureDetails() {
        // TODO: test StructureDetails
    }

    /**
     * Test the property 'structureID'
     */
    @Test
    public void structureIDTest() {
        // TODO: test structureID
    }

    /**
     * Test the property 'kinase'
     */
    @Test
    public void kinaseTest() {
        // TODO: test kinase
    }

    /**
     * Test the property 'species'
     */
    @Test
    public void speciesTest() {
        // TODO: test species
    }

    /**
     * Test the property 'kinaseID'
     */
    @Test
    public void kinaseIDTest() {
        // TODO: test kinaseID
    }

    /**
     * Test the property 'pdb'
     */
    @Test
    public void pdbTest() {
        // TODO: test pdb
    }

    /**
     * Test the property 'alt'
     */
    @Test
    public void altTest() {
        // TODO: test alt
    }

    /**
     * Test the property 'chain'
     */
    @Test
    public void chainTest() {
        // TODO: test chain
    }

    /**
     * Test the property 'rmsd1'
     */
    @Test
    public void rmsd1Test() {
        // TODO: test rmsd1
    }

    /**
     * Test the property 'rmsd2'
     */
    @Test
    public void rmsd2Test() {
        // TODO: test rmsd2
    }

    /**
     * Test the property 'pocket'
     */
    @Test
    public void pocketTest() {
        // TODO: test pocket
    }

    /**
     * Test the property 'resolution'
     */
    @Test
    public void resolutionTest() {
        // TODO: test resolution
    }

    /**
     * Test the property 'qualityScore'
     */
    @Test
    public void qualityScoreTest() {
        // TODO: test qualityScore
    }

    /**
     * Test the property 'missingResidues'
     */
    @Test
    public void missingResiduesTest() {
        // TODO: test missingResidues
    }

    /**
     * Test the property 'missingAtoms'
     */
    @Test
    public void missingAtomsTest() {
        // TODO: test missingAtoms
    }

    /**
     * Test the property 'ligand'
     */
    @Test
    public void ligandTest() {
        // TODO: test ligand
    }

    /**
     * Test the property 'allostericLigand'
     */
    @Test
    public void allostericLigandTest() {
        // TODO: test allostericLigand
    }

    /**
     * Test the property 'DFG'
     */
    @Test
    public void DFGTest() {
        // TODO: test DFG
    }

    /**
     * Test the property 'aCHelix'
     */
    @Test
    public void aCHelixTest() {
        // TODO: test aCHelix
    }

    /**
     * Test the property 'grichDistance'
     */
    @Test
    public void grichDistanceTest() {
        // TODO: test grichDistance
    }

    /**
     * Test the property 'grichAngle'
     */
    @Test
    public void grichAngleTest() {
        // TODO: test grichAngle
    }

    /**
     * Test the property 'grichRotation'
     */
    @Test
    public void grichRotationTest() {
        // TODO: test grichRotation
    }

    /**
     * Test the property 'front'
     */
    @Test
    public void frontTest() {
        // TODO: test front
    }

    /**
     * Test the property 'gate'
     */
    @Test
    public void gateTest() {
        // TODO: test gate
    }

    /**
     * Test the property 'back'
     */
    @Test
    public void backTest() {
        // TODO: test back
    }

    /**
     * Test the property 'fpI'
     */
    @Test
    public void fpITest() {
        // TODO: test fpI
    }

    /**
     * Test the property 'fpII'
     */
    @Test
    public void fpIITest() {
        // TODO: test fpII
    }

    /**
     * Test the property 'bpIA'
     */
    @Test
    public void bpIATest() {
        // TODO: test bpIA
    }

    /**
     * Test the property 'bpIB'
     */
    @Test
    public void bpIBTest() {
        // TODO: test bpIB
    }

    /**
     * Test the property 'bpIIIn'
     */
    @Test
    public void bpIIInTest() {
        // TODO: test bpIIIn
    }

    /**
     * Test the property 'bpIIAIn'
     */
    @Test
    public void bpIIAInTest() {
        // TODO: test bpIIAIn
    }

    /**
     * Test the property 'bpIIBIn'
     */
    @Test
    public void bpIIBInTest() {
        // TODO: test bpIIBIn
    }

    /**
     * Test the property 'bpIIOut'
     */
    @Test
    public void bpIIOutTest() {
        // TODO: test bpIIOut
    }

    /**
     * Test the property 'bpIIB'
     */
    @Test
    public void bpIIBTest() {
        // TODO: test bpIIB
    }

    /**
     * Test the property 'bpIII'
     */
    @Test
    public void bpIIITest() {
        // TODO: test bpIII
    }

    /**
     * Test the property 'bpIV'
     */
    @Test
    public void bpIVTest() {
        // TODO: test bpIV
    }

    /**
     * Test the property 'bpV'
     */
    @Test
    public void bpVTest() {
        // TODO: test bpV
    }

}
