/*
 * KLIFS API
 * Dynamically interact with the rich content of KLIFS: the structural kinase database
 *
 * The version of the OpenAPI document: 0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BioactivityDetails;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.LigandDetails;
import org.openapitools.client.model.StructureDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LigandsApi
 */
@Disabled
public class LigandsApiTest {

    private final LigandsApi api = new LigandsApi();

    /**
     * Get all ChEMBL kinase bioactivities for a specific ligand
     *
     * The Bioactivity list endpoint returns a list of all known ChEMBL kinase bioactivities for a given ligand as specified by the ligand ID. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bioactivityListIdGetTest() throws ApiException {
        Integer ligandID = null;
        List<BioactivityDetails> response = api.bioactivityListIdGet(ligandID);
        // TODO: test validations
    }

    /**
     * Get all ChEMBL kinase bioactivities for a specific ligand
     *
     * The Bioactivity list endpoint returns a list of all known ChEMBL kinase bioactivities for a given ligand as specified by the ligand PDB HET-code.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void bioactivityListPdbGetTest() throws ApiException {
        String ligandPDB = null;
        List<BioactivityDetails> response = api.bioactivityListPdbGet(ligandPDB);
        // TODO: test validations
    }

    /**
     * Get all co-crystallized ligands optionally restricted to a set of kinase IDs
     *
     * The Ligands List endpoint returns a list of co-crystallized ligands in KLIFS optiontally restricted to a set of specific kinase IDs. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ligandsListGetTest() throws ApiException {
        List<Integer> kinaseID = null;
        List<LigandDetails> response = api.ligandsListGet(kinaseID);
        // TODO: test validations
    }

    /**
     * Get all structures in complex with one of the provided ligand IDs
     *
     * The Ligands Get Structures endpoint returns a list of monomers of crystal structures in KLIFS in complex with provided ligand IDs. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void ligandsListStructuresGetTest() throws ApiException {
        List<Integer> ligandID = null;
        List<StructureDetails> response = api.ligandsListStructuresGet(ligandID);
        // TODO: test validations
    }

}
