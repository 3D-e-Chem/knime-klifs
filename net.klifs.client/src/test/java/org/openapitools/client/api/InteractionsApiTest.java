/*
 * KLIFS API
 * Dynamically interact with the rich content of KLIFS: the structural kinase database
 *
 * The version of the OpenAPI document: 0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.IFPList;
import org.openapitools.client.model.InteractionList;
import org.openapitools.client.model.MatchList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InteractionsApi
 */
@Disabled
public class InteractionsApiTest {

    private final InteractionsApi api = new InteractionsApi();

    /**
     * Get structure IFP
     *
     * The Get structure IFP endpoint returns the full IFP a specific kinase structure. This IFP consists of 7 interactions for each of the 85 pocket residues. The presence or absence of an interaction is annotation with a 1 and 0 respectively. This method returns a string of 85 residues x 7 interaction types&#x3D;595 bits. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interactionsGetIFPGetTest() throws ApiException {
        List<Integer> structureID = null;
        List<IFPList> response = api.interactionsGetIFPGet(structureID);
        // TODO: test validations
    }

    /**
     * Get interaction types
     *
     * The Get interaction types endpoint returns a list of the interactions (1-7) and the type of interaction. IFP encodes 7 types of interactions between the ligand and each pocket residue. E.g. 1000010 represents a hydrophobic interaction (position 1) and an ionic interaction: protein cation - ligand anion (position 6).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interactionsGetTypesGetTest() throws ApiException {
        List<InteractionList> response = api.interactionsGetTypesGet();
        // TODO: test validations
    }

    /**
     * Match IFP residues
     *
     * The Match IFP residues endpoint returns a list of the pocket definition of IFP including the X-ray numbering for a specific structure. This list can be used to decompose an IFP into specific residue interactions and to match Xray numbering to KLIFS numbering and vice versa.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void interactionsMatchResiduesGetTest() throws ApiException {
        Integer structureID = null;
        List<MatchList> response = api.interactionsMatchResiduesGet(structureID);
        // TODO: test validations
    }

}
